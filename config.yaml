"options":
  "debug":
    "default": !!bool "false"
    "type": "boolean"
    "description": "Enable debug logging"
  "verbose":
    "default": !!bool "false"
    "type": "boolean"
    "description": "Enable verbose logging"
  "use-syslog":
    "type": "boolean"
    "default": !!bool "false"
    "description": |
      Setting this to True will allow supporting services to log to syslog.
  "use-internal-endpoints":
    "type": "boolean"
    "default": !!bool "false"
    "description": |
      Openstack mostly defaults to using public endpoints for
      internal communication between services. If set to True this option
      will configure services to use internal endpoints where possible.
  "openstack-origin":
    "default": "distro"
    "type": "string"
    "description": |
      Repository from which to install OpenStack.

      May be one of the following:

        distro (default)
        ppa:somecustom/ppa (PPA name must include OpenStack Release)
        deb url sources entry|key id
        or a supported Ubuntu Cloud Archive pocket.

      Supported Ubuntu Cloud Archive pockets include:

        cloud:trusty-liberty
        cloud:trusty-juno
        cloud:trusty-kilo
        cloud:trusty-liberty
        cloud:trusty-mitaka

      Note that updating this setting to a source that is known to
      provide a later version of OpenStack will trigger a software
      upgrade.
  "action-managed-upgrade":
    "type": "boolean"
    "default": !!bool "false"
    "description": |
      If True enables openstack upgrades for this charm via juju actions.
      You will still need to set openstack-origin to the new repository but
      instead of an upgrade running automatically across all units, it will
      wait for you to execute the openstack-upgrade action for this charm on
      each unit. If False it will revert to existing behavior of upgrading
      all units on config change.
  "os-admin-network":
    "type": "string"
    "default": !!null ""
    "description": |
      The IP address and netmask of the OpenStack Admin network (e.g.,
      192.168.0.0/24)
      .
      This network will be used for admin endpoints.
  "os-internal-network":
    "type": "string"
    "default": !!null ""
    "description": |
      The IP address and netmask of the OpenStack Internal network (e.g.,
      192.168.0.0/24)
      .
      This network will be used for internal endpoints.
  "os-public-network":
    "type": "string"
    "default": !!null ""
    "description": |
      The IP address and netmask of the OpenStack Public network (e.g.,
      192.168.0.0/24)
      .
      This network will be used for public endpoints.
  "os-public-hostname":
    "type": "string"
    "default": !!null ""
    "description": |
      The hostname or address of the public endpoints created in the keystone
      identity provider.
      .
      This value will be used for public endpoints. For example, an
      os-public-hostname set to 'api-public.example.com' with ssl enabled
      will create the following endpoint for neutron-api:
      .
      https://api-public.example.com:9696/
  "os-internal-hostname":
    "type": "string"
    "default": !!null ""
    "description": |
      The hostname or address of the internal endpoints created in the keystone
      identity provider.
      .
      This value will be used for internal endpoints. For example, an
      os-internal-hostname set to 'api-internal.example.com' with ssl enabled
      will create the following endpoint for neutron-api:
      .
      https://api-internal.example.com:9696/
  "os-admin-hostname":
    "type": "string"
    "default": !!null ""
    "description": |
      The hostname or address of the admin endpoints created in the keystone
      identity provider.
      .
      This value will be used for admin endpoints. For example, an
      os-admin-hostname set to 'api-admin.example.com' with ssl enabled
      will create the following endpoint for neutron-api:
      .
      https://api-admin.example.com:9696/
  "region":
    "default": "RegionOne"
    "type": "string"
    "description": "OpenStack Region"
  "worker-multiplier":
    "type": "float"
    "default": !!null ""
    "description": |
      The CPU core multiplier to use when configuring worker processes.  By
      default, the number of workers for each daemon is set to twice the number
      of CPU cores a service unit has. When deployed in a LXD container, this
      default value will be capped to 4 workers unless this configuration
      option is set.
  "haproxy-server-timeout":
    "type": "int"
    "default": !!null ""
    "description": |
      Server timeout configuration in ms for haproxy, used in HA
      configurations. If not provided, default value of 90000ms is used.
  "haproxy-client-timeout":
    "type": "int"
    "default": !!null ""
    "description": |
      Client timeout configuration in ms for haproxy, used in HA
      configurations. If not provided, default value of 90000ms is used.
  "haproxy-queue-timeout":
    "type": "int"
    "default": !!null ""
    "description": |
      Queue timeout configuration in ms for haproxy, used in HA
      configurations. If not provided, default value of 9000ms is used.
  "haproxy-connect-timeout":
    "type": "int"
    "default": !!null ""
    "description": |
      Connect timeout configuration in ms for haproxy, used in HA
      configurations. If not provided, default value of 9000ms is used.
  "dns-ha":
    "type": "boolean"
    "default": !!bool "false"
    "description": |
      Use DNS HA with MAAS 2.0. Note if this is set do not set vip settings
      below.
  "vip":
    "type": "string"
    "default": !!null ""
    "description": |
      Virtual IP(s) to use to front API services in HA configuration.

      If multiple networks are being used, a VIP should be provided for each
      network, separated by spaces.
  "vip_iface":
    "type": "string"
    "default": "eth0"
    "description": |
      Default network interface to use for HA vip when it cannot be
      automatically determined.
  "vip_cidr":
    "type": "int"
    "default": !!int "24"
    "description": |
      Default CIDR netmask to use for HA vip when it cannot be automatically
      determined.
  "ssl_cert":
    "type": "string"
    "default": !!null ""
    "description": |
      SSL certificate to install and use for API ports.  Setting this value
      and ssl_key will enable reverse proxying, point Glance's entry in the
      Keystone catalog to use https, and override any certficiate and key
      issued by Keystone (if it is configured to do so).
  "ssl_key":
    "type": "string"
    "default": !!null ""
    "description": |
      SSL key to use with certificate specified as ssl_cert.
  "ssl_ca":
    "type": "string"
    "default": !!null ""
    "description": |
      SSL CA to use with the certificate and key provided - this is only
      required if you are providing a privately signed ssl_cert and ssl_key.
  "dns-slaves":
    "type": "string"
    "default": !!null ""
    "description": |
      List of DNS slaves which will accept addzone/delzone rndc commands from
      Designate. List is of the form slave_ip:rndc_port:rndc_key. This should
      only be used if DNS servers are outside of Juju control. Using the
      designate-bind charm is the prefered approach.
  "nova-domain":
    "type": "string"
    "default": !!null ""
    "description": |
      Domain to add records for new instances to
      (NOTE: This option is obsolete starting from OpenStack Mitaka release)
  "nova-domain-email":
    "type": "string"
    "default": !!null ""
    "description": |
      Email address of the person responsible for the domain.
      (NOTE: This option is obsolete starting from OpenStack Mitaka release)
  "nameservers":
    "type": "string"
    "default": !!null ""
    "description": |
      Space delimited list of nameservers. These are the nameservers that have
      been provided to the domain registrar in order to delegate the domain to
      Designate. e.g. "ns1.example.com. ns2.example.com."
      This config value is required for Queens and later.
  "neutron-domain":
    "type": "string"
    "default": !!null ""
    "description": |
      Domain to add floating IP records to.
      (NOTE: This option is obsolete starting from OpenStack Mitaka release)
  "neutron-domain-email":
    "type": "string"
    "default": !!null ""
    "description": |
      Email address of the person responsible for the domain.
      (NOTE: This option is obsolete starting from OpenStack Mitaka release)
  "neutron-record-format":
    "type": "string"
    "default": "%(octet0)s-%(octet1)s-%(octet2)s-%(octet3)s.%(zone)s"
    "description": |
      Format of floating IP global records.
      (NOTE: This option is obsolete starting from OpenStack Mitaka release)
  "neutron-record-formatv6":
    "type": "string"
    "default": "%(hostname)s.%(tenant_id)s.%(zone)s"
    "description": |
      Format of floating IPv6 global records.
      (NOTE: This option is obsolete starting from OpenStack Mitaka release)
  "nova-record-format":
    "type": "string"
    "default": "%(hostname)s.%(tenant_id)s.%(zone)s"
    "description": |
      Format of floating IP global records.
      (NOTE: This option is obsolete starting from OpenStack Mitaka release)
  "nova-record-formatv6":
    "type": "string"
    "default": "%(hostname)s.%(tenant_id)s.%(zone)s"
    "description": |
      Format of floating IPv6 global records.
      (NOTE: This option is obsolete starting from OpenStack Mitaka release)
  "enable-host-header":
    "type": "boolean"
    "default": !!bool "false"
    "description": "Enables host request headers."
  "also-notifies":
    "type": "string"
    "default": !!null ""
    "description": |
      Space delimited list of DNS servers which should be notified on every
      zone change in addition to the backend servers. List is of the form
      also_notify_ip:also_notify_port
  "enable-admin-api":
    "type": "boolean"
    "default": !!bool "false"
    "description": "Enables experimental admin API for Designate."
  "default-soa-expire":
    "type": "int"
    "default": !!int "86400"
    "description": |
      Default SOA expire value in seconds to specify how long a
      secondary will still treat its copy of the zone data as valid if
      it can't contact the primary.
